name: Production build.

on:
  pull_request:
    types:
      - closed
    branches: [ "main" ]

env:
  MODULE_NAME_1: app:grassland
  MODULE_NAME_2: app:zoo

jobs:
  build-deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          # todo: Add all of team members
          approvers: sghwang-mcorpor,keepbang
          minimum-approvals: 1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check my source
        run: pwd && ls -al

      - name: Init gradle
        run: |
          mkdir -p ~/.gradle/
          chmod +x ./gradle-init_obf.sh
          ./gradle-init_obf.sh
        shell: bash

      - name: Build with Gradle
        run: ./gradlew ${{ env.MODULE_NAME_1 }}:build

      - name: Build with Gradle
        run: ./gradlew ${{ env.MODULE_NAME_2 }}:build

      - name: Bump version and push tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: patch # pr 날릴때 major 추가해서 사용
        if: success()

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        id: github_release
        uses: ncipollo/release-action@v1
        with:
          #          skipIfReleaseExists: true
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            ${{steps.build_changelog.outputs.changelog}}
        if: success()

      - name: Rename released branch
        id: rename_branch
        run: |
          # Set variables
          echo "OLD_BRANCH=${{ steps.tag_version.outputs.part }}/${{ steps.tag_version.outputs.tag }}" >> $GITHUB_ENV
          echo "NEW_BRANCH=${{ steps.tag_version.outputs.part }}/${{ steps.tag_version.outputs.tag }}-released" >> $GITHUB_ENV
          # Rename branch
          # git push <remote> <remote>/<old_name>:refs/heads/<new_name> :<old_name>
          git push origin origin/${{ env.OLD_BRANCH }}:refs/heads/${{ env.NEW_BRANCH }} :${{ env.OLD_BRANCH }}
