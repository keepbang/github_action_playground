name: Trial Publish

on:
  workflow_call:
    inputs:
      MODULE_NAME:
        required: true
        type: string
      LIBRARY_NAME:
        required: true
        type: string
      DEFAULT_BRANCH:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-20.04

    outputs:
      new_tag: ${{ steps.output_new_tag.outputs.new_tag }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check my source
        run: pwd && ls -al

      - name: Init gradle
        run: |
          mkdir -p ~/.gradle/
          chmod +x ./gradle-init_obf.sh
          ./gradle-init_obf.sh
        shell: bash

      - name: Nexus library version update
        id: nexus_version
        uses: keepbang/nexus-version-update@v0.0.12
        with:
          repository: maven-releases
          format: maven2
          group: com.mco.playground
          name: employee-object
          nexus_host: ${{ secrets.NEXUS_URL }}
          auth_base64: ${{ secrets.NEXUS_AUTH }}

      - name: version output
        run: |
          echo "latest_version=${{ steps.nexus_version.outputs.latest_version }}"
          echo "new_version=${{ steps.nexus_version.outputs.new_version }}"


#      - name: Bump tag version
#        id: tag_version
#        uses: keepbang/bump-tag-version@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          WITH_V: false
#          DEFAULT_BUMP: patch # pr 날릴때 major 추가해서 사용
#          PRERELEASE: true
#          PRERELEASE_SUFFIX: ${{ inputs.LIBRARY_NAME }}
#          DEFAULT_BRANCH: ${{ inputs.DEFAULT_BRANCH }}

#
#      - name: Build with Gradle
#        run: ./gradlew ${{ inputs.MODULE_NAME }}:build
#
#      - name: Output new tag
#        id: output_new_tag
#        run: echo "new_tag=${{ steps.tag_version.outputs.new_tag }}" >> "$GITHUB_OUTPUT"
#
#      # suffix 제거 스크립트
#      - name: library version extraction
#        id: alpha_version
#        run: |
#          echo "VERSION="$(echo "${{ steps.tag_version.outputs.new_tag }}" | sed 's/-${{ inputs.LIBRARY_NAME }}//') >> $GITHUB_OUTPUT
#
#      - name: Nexus Repo Publish
#        run: ./gradlew ${{ inputs.MODULE_NAME }}:publish -DVERSION=${{ steps.alpha_version.outputs.VERSION }} -DARTIFACT_ID=${{ inputs.LIBRARY_NAME }}
#
#      - name: Commits parsing
#        uses: actions/github-script@v6
#        id: commit_list
#        with:
#          result-encoding: string
#          script: |
#            const event = ${{ toJSON(github.event) }};
#            const commitList = [];
#            commitList.push("# Commit List \n ");
#            for (const commit of event.commits) {
#              const content = ["**" + commit.timestamp.replace('T',' ').replace('+09:00','') + "**",
#                                "**" + commit.committer.username + "**",
#                                commit.message,
#                                "[Commit link](" + commit.url + ")"
#              ].join("\n");
#              commitList.push(content);
#            }
#
#            const joinStr = commitList.join(`
#            \n ###    ---
#            `);
#
#            console.log(joinStr);
#
#            return joinStr;
#
#      - name: Logging
#        run: |
#          echo "${{ steps.commit_list.outputs.result }}"
#
#      # 노션 데이터베이스에 추가
#      - name: Notion release notes
#        uses: infinitaslearning/notion-release-notes@v0.6
#        with:
#          token: ${{ secrets.NOTION_TOKEN }}
#          database: ${{ secrets.NOTION_RELEASE_NOTE_DATABASE }}
#          name: ${{ inputs.LIBRARY_NAME }}-${{ steps.alpha_version.outputs.VERSION }}
#          tags: ${{ steps.alpha_version.outputs.VERSION }}, ${{ github.event.repository.name }}:${{ inputs.MODULE_NAME }}
#          body: ${{ steps.commit_list.outputs.result }}

#  handler-failure:
#    name: failure tag rollback
#    runs-on: ubuntu-20.04
#    needs: [ build ]
#    if: failure() && needs.build.result == 'failure'
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: delete new tag
#        run: git push origin --delete ${{ needs.build.outputs.new_tag }}
