name: Deploy

on:
  workflow_call:
    outputs:
      new_version:
        value: ${{ jobs.application-deploy.outputs.new_version }}
      tag:
        value: ${{ jobs.application-deploy.outputs.tag }}
      part:
        value: ${{ jobs.application-deploy.outputs.part }}

# TODO: shell 등을 이용해서 gradle의 모듈 이름을 꺼내오기
env:
  MODULE_NAME_1: app:grassland
  APPLICATION_NAME_1: mco-playground-grassland
  MODULE_NAME_2: app:zoo
  APPLICATION_NAME_2: mco-playground-zoo
  MODULE_NAME_3: aid:employee
  LIBRARY_NAME: employee-object

jobs:
  tagging:
    uses: ./.github/workflows/bump-version-tag.yml

  application-deploy:
    name: application deploy
    needs: [ tagging ]
    runs-on: ubuntu-20.04

    outputs:
      new_version: ${{ needs.tagging.outputs.new_version }}
      tag: ${{ needs.tagging.outputs.tag }}
      part: ${{ needs.tagging.outputs.part }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check my source
        run: pwd && ls -al

      - name: Init gradle
        run: |
          mkdir -p ~/.gradle/
          chmod +x ./gradle-init_obf.sh
          ./gradle-init_obf.sh
        shell: bash

      - name: Build with Gradle
        run: ./gradlew ${{ env.MODULE_NAME_1 }}:build

      - name: Build with Gradle
        run: ./gradlew ${{ env.MODULE_NAME_2 }}:build

      - name: Nexus Repo Publish
        run: ./gradlew ${{ env.MODULE_NAME_3 }}:publish -DVERSION=${{ needs.tagging.outputs.new_version }}

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelogs/configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        id: github_release
        uses: ncipollo/release-action@v1
        with:
          #          skipIfReleaseExists: true
          tag: ${{ needs.tagging.outputs.new_version }}
          name: Release ${{ needs.tagging.outputs.new_version }}
          body: |
            ${{steps.build_changelog.outputs.changelog}}

      - name: Module list parsing
        id: module_parsing
        run: |
          ./gradlew projects -p 'aid' | grep -o "Project ':aid:[^ ']*" | awk '{print substr($0, 11)}' >> module_list.txt
          ./gradlew projects -p 'app' | grep -o "Project ':app:[^ ']*" | awk '{print substr($0, 11)}' >> module_list.txt
          echo "TAG_LIST="$(echo $(cat ./module_list.txt) | sed 's/ /,/g' | sed 's/aid/${{ github.event.repository.name }}:aid/g' | sed 's/app/${{ github.event.repository.name }}:app/g') >> $GITHUB_OUTPUT

      - name: tag list logging
        run: |
          echo "${{ steps.module_parsing.outputs.TAG_LIST }}"

      # 어플리케이션 1 노션 데이터베이스에 추가
      - name: Notion release notes ${{ github.event.repository.name }} application
        uses: infinitaslearning/notion-release-notes@v0.6
        with:
          token: ${{ secrets.NOTION_TOKEN }}
          database: ${{ secrets.NOTION_RELEASE_NOTE_DATABASE }}
          name: ${{ github.event.repository.name }}-${{ needs.tagging.outputs.new_version }}
          tags: ${{ needs.tagging.outputs.new_version }},${{ steps.module_parsing.outputs.TAG_LIST }}
          body: ${{ steps.build_changelog.outputs.changelog }}
