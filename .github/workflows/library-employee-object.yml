# library.yml
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Library alpha build.

on:
  push:
    branches: [ "library-employee-object" ]

env:
  MODULE_NAME: aid:employee
  LIBRARY_NAME: employee-object

jobs:
  build:
    name: "LOG Everything on GitHub Event"
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check my source
        run: pwd && ls -al

      - name: Commits parsing
        uses: actions/github-script@v6
        id: commit_list
        with:
          result-encoding: string
          script: |
            const event = ${{ toJSON(github.event) }};
            const commitList = [];
            commitList.push("# Commit List \n ");
            for (const commit of event.commits) {
              const content = ["**" + commit.timestamp + "**",
                                "**" + commit.committer.username + "**",
                                commit.message,
                                commit.url
              ].join("\n");
              commitList.push(content);
            }
            
            const joinStr = commitList.join(`
            \n ###    ---
            `);
            
            return joinStr;

      - name: Init gradle
        run: |
          mkdir -p ~/.gradle/
          chmod +x ./gradle-init_obf.sh
          ./gradle-init_obf.sh
        shell: bash

      - name: Build with Gradle
        run: ./gradlew ${{ env.MODULE_NAME }}:build

      - name: Bump version and push tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: patch # pr 날릴때 major 추가해서 사용
          PRERELEASE: true
          PRERELEASE_SUFFIX: ${{ env.LIBRARY_NAME }}
          DEFAULT_BRANCH: library-employee-object

      # suffix 제거 스크립트
      - name: library version extraction
        id: alpha_version
        run: |
          echo "${{ steps.tag_version.outputs.new_tag }}" | sed 's/-${{ env.LIBRARY_NAME }}//' > alpha_version.txt
          new_version=`cat alpha_version.txt`
          echo "VERSION=$new_version" >> $GITHUB_OUTPUT

      - name: Nexus Repo Publish
        run: ./gradlew ${{ env.MODULE_NAME }}:publish -DVERSION=${{ steps.alpha_version.outputs.VERSION }}


      # 라이브러리 노션 데이터베이스에 추가
      - name: Notion release notes ${{ env.MODULE_NAME }} library
        uses: infinitaslearning/notion-release-notes@v0.6
        with:
          token: ${{ secrets.NOTION_TOKEN }}
          database: ${{ secrets.NOTION_RELEASE_NOTE_DATABASE }}
          name: ${{ env.LIBRARY_NAME }}-${{ steps.alpha_version.outputs.VERSION }}
          tags: ${{ steps.alpha_version.outputs.VERSION }}, ${{ github.event.repository.name }}:${{ env.MODULE_NAME }}
          body: ${{ steps.commit_list.outputs.result }}
