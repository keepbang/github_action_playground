# TODO: 각 스테이징을 major, minor로 분리??

name: Sync staging branch.

on:
#   schedule:
#     - cron: '0 9 * * 1'
    # scheduled at 09:00 on Monday
  workflow_dispatch:  # click the button on Github repo!

env:
  REPO_NAME: mcorporation-dev/mco-playground
  STAGING_BRANCH_1: build-app-grassland
  STAGING_BRANCH_2: build-app-zoo

jobs:
  get_next_version_tag:
    name: Get next version tag
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get Previous tag
        id: previous_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next version
        id: next_version
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previous_tag.outputs.tag }}
    outputs:
      next_major_version: ${{ steps.next_version.outputs.major }}
      next_minor_version: ${{ steps.next_version.outputs.minor }}

  sync_from_major:
    runs-on: ubuntu-20.04
    needs: [get_next_version_tag]
    name: Sync latest commits from major branch
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.STAGING_BRANCH_1 }}
          # REQUIRED if your upstream repo is private (see wiki)
          persist-credentials: false
          
      # REQUIRED step
      # Step 2: run the sync action
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          target_sync_branch: ${{ env.STAGING_BRANCH_1 }}
          # REQUIRED 'target_repo_token' exactly like this!
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          upstream_sync_branch: major/${{ needs.get_next_version_tag.outputs.next_major_version }}
          upstream_sync_repo: ${{ env.REPO_NAME }}
          upstream_repo_access_token: ${{ secrets.GITHUB_TOKEN }}

          # Set test_mode true to run tests instead of the true action!!
          test_mode: false

      # Step 3: Display a sample message based on the sync output var 'has_new_commits'
      - name: New commits found
        if: steps.sync.outputs.has_new_commits == 'true'
        run: echo "New commits from major were found to sync."

      - name: No new commits
        if: steps.sync.outputs.has_new_commits == 'false'
        run: echo "There were no new commits from major."

  sync_from_minor:
    runs-on: ubuntu-20.04
    needs: [get_next_version_tag]
    name: Sync latest commits from minor branch
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.STAGING_BRANCH_1 }}
          # REQUIRED if your upstream repo is private (see wiki)
          persist-credentials: false
          
      # REQUIRED step
      # Step 2: run the sync action
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          target_sync_branch: ${{ env.STAGING_BRANCH_1 }}
          # REQUIRED 'target_repo_token' exactly like this!
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          upstream_sync_branch: minor/${{ needs.get_next_version_tag.outputs.next_minor_version }}
          upstream_sync_repo: ${{ env.REPO_NAME }}
          upstream_repo_access_token: ${{ secrets.GITHUB_TOKEN }}

          # Set test_mode true to run tests instead of the true action!!
          test_mode: false

      # Step 3: Display a sample message based on the sync output var 'has_new_commits'
      - name: New commits found
        if: steps.sync.outputs.has_new_commits == 'true'
        run: echo "New commits from minor were found to sync."

      - name: No new commits
        if: steps.sync.outputs.has_new_commits == 'false'
        run: echo "There were no new commits from minor."          
